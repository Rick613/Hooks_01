<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBQAAAEAIAB4CgAAFgAAACgAAAAgAAAAKAAAAAEAIAAAAAAAAAoAABAnAAAQJwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAATAAAALgAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAA
        ADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAuAAAAEwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAATgAAAMcAAADrAAAA7QAAAOwAAADpAAAA6gAAAO0AAADtAAAA7QAA
        AO0AAADtAAAA7QAAAO0AAADtAAAA7QAAAO0AAADtAAAA7QAAAO0AAADtAAAA6gAAAOkAAADsAAAA7QAA
        AOsAAADHAAAATgAAAAAAAAAAAAAAAAAAADEAAADkAAAA6gAAAKYAAACcAAAArAAAAPkAAADcAAAAnQAA
        AJ0AAACdAAAAnQAAAJ0AAACdAAAAnQAAAJ0AAACdAAAAnQAAAJ0AAACdAAAAnQAAAJ0AAADcAAAA+QAA
        AKwAAACcAAAApgAAAOoAAADkAAAAMQAAAAAAAAAAAAAAdQAAAP8AAABjAAAAAAAAAAAAAAAnAAAA7AAA
        AKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AKEAAADsAAAAJwAAAAAAAAAAAAAAYwAAAP8AAAB1AAAAAAAAAAAAAACGAAAA+AAAADoAAAAAAAAAAAAA
        ACcAAADsAAAAoQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAoQAAAOwAAAAnAAAAAAAAAAAAAAA6AAAA+AAAAIYAAAAAAAAAAAAAAIYAAAD3AAAAOQAA
        AAAAAAAAAAAAJgAAAOwAAAChAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAChAAAA7AAAACYAAAAAAAAAAAAAADkAAAD3AAAAhgAAAAAAAAAAAAAAhQAA
        AP4AAACuAAAAlQAAAJUAAACmAAAA9wAAANgAAACWAAAAlgAAAJYAAACVAAAAlQAAAJYAAACWAAAAlgAA
        AJYAAACVAAAAlQAAAJYAAACWAAAAlgAAANgAAAD3AAAApgAAAJUAAACVAAAArgAAAP4AAACFAAAAAAAA
        AAAAAACFAAAA/wAAAPUAAADyAAAA8gAAAPQAAAD+AAAA+gAAAPIAAADyAAAA8gAAAPwAAAD/AAAA9QAA
        APIAAADyAAAA9QAAAP8AAAD8AAAA8gAAAPIAAADyAAAA+gAAAP4AAAD0AAAA8gAAAPIAAAD1AAAA/wAA
        AIUAAAAAAAAAAAAAAIYAAAD6AAAAXwAAAC0AAAAuAAAAUAAAAPAAAACzAAAAMAAAADAAAAAuAAAAqAAA
        APUAAABXAAAALQAAAC0AAABXAAAA9QAAAKgAAAAuAAAAMAAAADAAAACzAAAA8AAAAFAAAAAuAAAALQAA
        AF8AAAD6AAAAhgAAAAAAAAAAAAAAhgAAAPcAAAA4AAAAAAAAAAAAAAAlAAAA7AAAAKAAAAAAAAAAAAAA
        AAAAAACTAAAA8gAAAC4AAAAAAAAAAAAAAC4AAADyAAAAkwAAAAAAAAAAAAAAAAAAAKAAAADsAAAAJQAA
        AAAAAAAAAAAAOAAAAPcAAACGAAAAAAAAAAAAAACGAAAA9wAAADgAAAAAAAAAAAAAACUAAADsAAAAoAAA
        AAAAAAAAAAAAAAAAAJMAAADyAAAALgAAAAAAAAAAAAAALgAAAPIAAACTAAAAAAAAAAAAAAAAAAAAoAAA
        AOwAAAAlAAAAAAAAAAAAAAA4AAAA9wAAAIYAAAAAAAAAAAAAAIYAAAD6AAAAXwAAACwAAAAtAAAATwAA
        APAAAACzAAAAMAAAAC8AAAAuAAAAqAAAAPUAAABXAAAALQAAAC0AAABXAAAA9QAAAKgAAAAuAAAALwAA
        ADAAAACzAAAA8AAAAE8AAAAtAAAALAAAAF8AAAD6AAAAhgAAAAAAAAAAAAAAhQAAAP8AAAD1AAAA8gAA
        APIAAAD0AAAA/gAAAPoAAADyAAAA8gAAAPIAAAD5AAAA/gAAAPQAAADyAAAA8gAAAPQAAAD+AAAA+QAA
        APIAAADyAAAA8gAAAPoAAAD+AAAA9AAAAPIAAADyAAAA9QAAAP8AAACFAAAAAAAAAAAAAACFAAAA/gAA
        AK8AAACVAAAAlgAAAKcAAAD3AAAA2QAAAJcAAACXAAAAlgAAANMAAAD6AAAAqwAAAJYAAACWAAAAqwAA
        APoAAADTAAAAlgAAAJcAAACXAAAA2QAAAPcAAACnAAAAlgAAAJUAAACvAAAA/gAAAIUAAAAAAAAAAAAA
        AIYAAAD3AAAAOgAAAAAAAAAAAAAAJgAAAOwAAAChAAAAAAAAAAAAAAAAAAAAlAAAAPIAAAAvAAAAAAAA
        AAAAAAAvAAAA8gAAAJQAAAAAAAAAAAAAAAAAAAChAAAA7AAAACYAAAAAAAAAAAAAADoAAAD3AAAAhgAA
        AAAAAAAAAAAAhgAAAPgAAAA6AAAAAAAAAAAAAAAnAAAA7AAAAKEAAAAAAAAAAAAAAAAAAACUAAAA8gAA
        ADAAAAAAAAAAAAAAADAAAADyAAAAlAAAAAAAAAAAAAAAAAAAAKEAAADsAAAAJwAAAAAAAAAAAAAAOgAA
        APgAAACGAAAAAAAAAAAAAAB1AAAA/wAAAGIAAAAAAAAAAAAAACcAAADsAAAAoQAAAAAAAAAAAAAAAAAA
        AJQAAADyAAAAMAAAAAAAAAAAAAAAMAAAAPIAAACUAAAAAAAAAAAAAAAAAAAAoQAAAOwAAAAnAAAAAAAA
        AAAAAABiAAAA/wAAAHUAAAAAAAAAAAAAADEAAADlAAAA6QAAAKUAAACbAAAArAAAAPkAAADcAAAAnAAA
        AJwAAACcAAAA1gAAAPsAAACvAAAAmwAAAJsAAACvAAAA+wAAANYAAACcAAAAnAAAAJwAAADcAAAA+QAA
        AKwAAACbAAAApQAAAOkAAADlAAAAMQAAAAAAAAAAAAAAAAAAAE8AAADIAAAA7AAAAO0AAADtAAAA6QAA
        AOsAAADtAAAA7QAAAO0AAADrAAAA6QAAAOwAAADtAAAA7QAAAOwAAADpAAAA6wAAAO0AAADtAAAA7QAA
        AOsAAADpAAAA7QAAAO0AAADsAAAAyAAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAAAuAAAAMQAA
        ADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAA
        ADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAAC4AAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>